package com.awaion.demo008.cxf;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.0.9
 * Generated source version: 3.0.9
 */
@WebServiceClient(name = "ICalculateServiceService",
        wsdlLocation = "http://localhost/ws/calculate?wsdl",
        targetNamespace = "https://cxf.apache.org/")
public class ICalculateServiceService extends Service {
    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("https://cxf.apache.org/", "ICalculateServiceService");
    public final static QName ICalculateServicePort = new QName("https://cxf.apache.org/", "ICalculateServicePort");

    static {
        URL url = null;
        try {
            url = new URL("http://localhost/ws/calculate?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ICalculateServiceService.class.getName())
                    .log(java.util.logging.Level.INFO,
                            "Can not initialize the default wsdl from {0}", "http://localhost/ws/calculate?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ICalculateServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ICalculateServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ICalculateServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ICalculateServiceService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ICalculateServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ICalculateServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns ICalculateService
     */
    @WebEndpoint(name = "ICalculateServicePort")
    public ICalculateService getICalculateServicePort() {
        return super.getPort(ICalculateServicePort, ICalculateService.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ICalculateService
     */
    @WebEndpoint(name = "ICalculateServicePort")
    public ICalculateService getICalculateServicePort(WebServiceFeature... features) {
        return super.getPort(ICalculateServicePort, ICalculateService.class, features);
    }

}
